server {
    listen 80 default_server;
    listen [::]:80 default_server;

    root /var/www/html;
    index index.php index.html index.htm index.nginx-debian.html;

    client_max_body_size 150m;

    server_name 'domain.tld';
    add_header 'Access-Control-Allow-Origin' '*';
    add_header 'Access-Control-Allow-Methods' 'GET, POST';
    add_header 'Access-Control-Allow-Headers' 'origin, x-requested-with, content-type';

    autoindex off;

    # Redirect all HTTP requests to HTTPS with a 301 Moved Permanently response.
    return 301 https://$host$request_uri;

    # Misc Hardening
    server_tokens off;

    location ~ /\.(?!well-known).* {
      deny all;
      access_log off;
      log_not_found off;
      return 404;
    }

    if ($request_method !~ ^(GET|HEAD|POST)$ ) {
        return 444;
    }

}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    root /var/www/html;
    index index.php index.html index.htm index.nginx-debian.html;

    client_max_body_size 150m;

    autoindex off;

    server_name 'domain.tld';
    add_header 'Access-Control-Allow-Origin' '*';
    add_header 'Access-Control-Allow-Methods' 'GET, POST';
    add_header 'Access-Control-Allow-Headers' 'origin, x-requested-with, content-type';

location /
    {
        if ($request_uri !~ "assets")
        {
                set $rule_0 1$rule_0;
        }

        if ($rule_0 = "1")
        {
                rewrite ^/(.*)$ /init.php;
        }
    }

   location ^~ /.well-known/security.txt {
        allow all;
        default_type "text/plain";
    }

   location ^~ /humans.txt {
         allow all;
         default_type "text/plain";
   }

    location ~ \.php$ {
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/run/php/php7.2-fpm.sock;
    }

    # Certs sent to the client in SERVER HELLO are concatenated in ssl_certificate
    ssl_certificate /etc/letsencrypt/live/domain.tld/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/domain.tld/privkey.pem;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;

    # "Modern"-ish configuration.
    ssl_protocols TLSv1.3 TLSv1.2 TLSv1.1;
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
    ssl_prefer_server_ciphers on;

    # HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)
    add_header Strict-Transport-Security max-age=15768000;

    # OCSP Stapling ---
    # fetch OCSP records from URL in ssl_certificate and cache them
    ssl_stapling on;
    ssl_stapling_verify on;

    ## Verify chain of trust of OCSP response using Root CA and Intermediate certs
    ssl_trusted_certificate /etc/ssl/certs/ca-certificates.crt;
    resolver 1.0.0.1;

    # Misc Hardening
    server_tokens off;

    location ~ /\.(?!well-known).* {
      deny all;
      access_log off;
      log_not_found off;
      return 404;
    }

    if ($request_method !~ ^(GET|HEAD|POST)$ ) {
        return 444;
    }
}
